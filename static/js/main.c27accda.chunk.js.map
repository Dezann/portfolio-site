{"version":3,"sources":["media/Projects/poznajmy-sie.svg","media/Projects/cardman.svg","media/my_photo.jpg","media/github.svg","media/e_mail.svg","media/linkedin.svg","components/WelcomePage.js","components/Project.js","components/Projects.js","components/Links.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WelcomePage","state","className","style","color","Component","Project","href","this","props","link","src","image","title","info","Projects","poznajmySie","cardman","Links","target","alt","github","e_mail","linkedin","my_photo","Menu","detectSection","sections","current","console","log","React","createRef","id","ref","activeClass","to","spy","smooth","offset","duration","App","Fragment","name","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c27accda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poznajmy-sie.d9a03262.svg\";","module.exports = __webpack_public_path__ + \"static/media/cardman.42310385.svg\";","module.exports = __webpack_public_path__ + \"static/media/my_photo.16bf2304.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.e618bb41.svg\";","module.exports = __webpack_public_path__ + \"static/media/e_mail.4cd529fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.3af095f8.svg\";","import React, { Component } from 'react'\r\nimport './WelcomePage.scss'\r\nclass WelcomePage extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <div className='welcome-page-content'>\r\n        <div className='dark-bg'>\r\n          <div className='middle-text'>\r\n            <div className='name'>\r\n              <p>\r\n                <span style={{ color: '#FFCC0A' }}>Bartosz</span> Kępka\r\n              </p>\r\n            </div>\r\n            <div className='job'>\r\n              <p>front-end developer</p>\r\n              <p>Warsaw, Poland</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WelcomePage\r\n","import React, { Component } from 'react';\r\nimport \"./Project.scss\"\r\n\r\nclass Project extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <a href={this.props.link}>\r\n                <div className=\"project-wrapper\">\r\n                    <img className=\"project-img\" src={this.props.image}></img>\r\n                    <p className=\"project-title\">{this.props.title}</p>\r\n                    <p className=\"project-info\">{this.props.info}</p>\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;","import React, { Component } from 'react'\r\nimport cardman from '../media/Projects/cardman.svg'\r\nimport poznajmySie from '../media/Projects/poznajmy-sie.svg'\r\nimport Project from './Project'\r\nimport './Projects.scss'\r\nclass Projects extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    return (\r\n      <div className='projects-page-content'>\r\n        <div className='primary-projects-txt'>\r\n          <p>MY PRIMARY PROJECTS</p>\r\n        </div>\r\n        <div className='projects-wrapper'>\r\n          <Project\r\n            title='Poznajmy się'\r\n            image={poznajmySie}\r\n            info='A fortune wheel party game with intriguing questions.'\r\n          ></Project>\r\n          <Project\r\n            link='https://github.com/VengelStudio/cardman-multiplayer'\r\n            title='Cardman Multiplayer'\r\n            image={cardman}\r\n            info='A multiplayer hangman with elements of card game.'\r\n          ></Project>\r\n          <Project\r\n            title='Placeholder'\r\n            image={poznajmySie}\r\n            info='Placeholder'\r\n          ></Project>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects\r\n","import React, { Component } from 'react'\r\nimport './Links.scss'\r\nimport my_photo from '../media/my_photo.jpg'\r\nimport github from '../media/github.svg'\r\nimport e_mail from '../media/e_mail.svg'\r\nimport linkedin from '../media/linkedin.svg'\r\n\r\nclass Links extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <div className='links-content'>\r\n        <div className='links-wrapper'>\r\n          <p className='contact-me-txt'>Contact me</p>\r\n          <div className='line'></div>\r\n          <div className='links'>\r\n            <a href='https://github.com/dezann' target='_blank'>\r\n              <div className='links-row'>\r\n                <img alt='' src={github}></img>\r\n                <p>Github</p>\r\n              </div>\r\n            </a>\r\n            <a href='mailto: bartoszkepka1999@gmail.com' target='_blank'>\r\n              <div className='links-row'>\r\n                <img alt='' src={e_mail}></img>\r\n                <p>Email</p>\r\n              </div>\r\n            </a>\r\n            <a href='https://www.linkedin.com/in/bartosz-k%C4%99pka-118325181/'>\r\n              <div className='links-row' target='_blank'>\r\n                <img alt='' src={linkedin}></img>\r\n                <p>Linkedin</p>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <img src={my_photo} className='my-photo'></img>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Links\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-scroll'\r\nimport './Menu.scss'\r\n\r\n\r\n\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.sections = React.createRef()\r\n    }\r\n    state = {\r\n    }\r\n\r\n    detectSection = () => {\r\n        let sections = this.sections.current\r\n        console.log(sections)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.detectSection()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='menu' id='menu'>\r\n                <div className='menu-pages-wrapper' ref={this.sections}>\r\n                    <Link\r\n                        activeClass='active'\r\n                        to='about'\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-59}\r\n                        duration={500}\r\n                    >\r\n                        About\r\n          </Link>\r\n                    <Link\r\n                        activeClass='active'\r\n                        to='projects'\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-59}\r\n                        duration={500}\r\n                    >\r\n                        Projects\r\n          </Link>\r\n                    <Link\r\n                        activeClass='active'\r\n                        to='contact'\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-60}\r\n                        duration={500}\r\n                    >\r\n                        Contact\r\n          </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport './App.scss'\r\nimport './components/WelcomePage'\r\nimport WelcomePage from './components/WelcomePage'\r\nimport Projects from './components/Projects'\r\nimport Links from './components/Links'\r\nimport Menu from './components/Menu'\r\nimport { Element } from 'react-scroll'\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Menu />\r\n      <div className='container'>\r\n        <Element name='about'>\r\n          <WelcomePage />\r\n        </Element>\r\n        <Element name='projects'>\r\n          <Projects />\r\n        </Element>\r\n        <Element name='contact'>\r\n          <Links />\r\n        </Element>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}